source("best.R")
best("TXs", 'heart attacks')
source("best.R")
best("TXs", 'heart attacks')
source("best.R")
best("TXs", 'heart attacks')
source("best.R")
best("TXs", 'heart attacks')
source("best.R")
best("TXs", 'heart attacks')
best("TXs", 'heart attack')
best("TX", 'heart attacks')
min (ocm[,11])
min (as.numeric(ocm[,11])
ha.vals <- (as.numeric(ocm[,11])
min (as.numeric(ocm[,11]))
?subset
?order
ocm.sorted <- order(ocm[,11])
head(ocm[,11])
head(ocm.sorted[,11])
head(ocm.sorted)
ocm.sorted <- ocm[order(ocm[,11])]
head(ocm)
colnames(ocm)
ocm.sorted <- ocm[order(ocm[,11])]
ocm.sorted <- ocm[order(ocm[,11]),]
head(ocm)
head(ocm[,11])
head(ocm.sorted[,11])
min(ocm.sorted[,11])
min(as.numeric(ocm.sorted[,11]))
min(as.numeric(ocm[,11]))
subset(df, ocm[,11] == min (as.numeric(ocm[,11]))
)
min(ocm[,11])
class(ocm[,11])
com <- read.csv("outcome-of-care-measures.csv")
class(com[,11])
ocm <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
class (ocm[,11])
min (ocm[,11])
rm(com)
rm ocm.sorted
rm (ocm.sorted)
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
debug(best)
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
debug(best)
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
?subset
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
?subset
?split
source("best.R")
best("TX", "heart attack")
ocm <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head (ocm)
head (ocm[1.1:5])
head (ocm[ ,1:5])
head (ocm[ ,1:7])
ocm.state <= split (ocm, ocm$State = "TX")
ocm.state <= split (ocm, ocm$State)
ocm.state <- split (ocm, ocm$State = "TX")
ocm.state <- split (ocm, ocm$State == "TX")
head (ocm.state[,1:7])
head(ocm.state)
ocm.state <- data.frame(split (ocm, ocm$State == "TX"))
?tapply
rm(ocm.state)
?which
which.min(ocm, ocm$State == "TX")
which.min(ocm[,11], ocm$State == "TX")
which.min(ocm[,11])
head(ocm$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
head(ocm[1,1)
head(ocm[1,1])
head(ocm[1,1:5])
head(ocm[1:10,1:5])
head(ocm[1:10,1:7])
order(ocm$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
head(ocm[1:10,1:7])
ocm.sorted<-order(ocm$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
head(ocm.sorted[1:10,1:7])
head(ocm.sorted)
min(ocm$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
min(ocm$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
min(ocm$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
?order
ocm[order(ocm$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)]
ocm.sorted <- ocm[order(ocm$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
head(ocm.sorted[1:10,1:7])
head(ocm.sorted[1:10,c(1:7,11)])
?by
by(ocm.sorted[,2], "TX", min(ocm.sorted[,11]))
?eval
ocm.state <- ocm.sorted[State == "TX"]
ocm.state <- ocm.sorted[ocm.sorted$State == "TX"]
ocm.state <- ocm.sorted[ocm.sorted[,7] == "TX",]
head(ocm.state)
head(ocm.state[1:5,1:7])
source("best.R")
best("TX", "heart attack")
?subset
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
source("best.R")
best("TX", "heart failure")
ocm[ocm[,7] == "FORT DUNCAN MEDICAL CENTER"]
ocm[ocm[,7] == "CYPRESS FAIRBANKS MEDICAL CENTER"]
source("best.R")
best("TX", "heart failure")
ocm[ocm[,2] == "FORT DUNCAN MEDICAL CENTER",]
ocm[ocm[,2] == "FORT DUNCAN MEDICAL CENTER", c(2,7,11,17,23)]
ocm[ocm[,2] == "FORT DUNCAN MEDICAL CENTER", c(2,7,11,17,23)]
ocm[ocm[,2] == "FORT DUNCAN MEDICAL CENTER", c(2,7,11,17,23)]
source("best.R")
ocm[ocm[,2] == "FORT DUNCAN MEDICAL CENTER",]
best("TX", "heart failure")
min(ocm[ocm[,7] == "TX", 17])
min(ocm.sorted[ocm.sorted[,7] == "TX", 17])
ocm.state <- ocm[ocm[,7] == "TX",]
head(ocm.state)
min(ocm.state[,11])
min(ocm.state[,17])
min(ocm[,17])
min(ocm[,11])
?min
min(ocm[,17], na.rm =F)
min(ocm[,17], na.rm =T)
min(ocm[,17], na.rm =TRUE)
min(ocm[,11], na.rm =TRUE)
mv <- min(ocm[,11], na.rm =TRUE)
class(mv)
rm(mv)
hf.val <- ocm.state[,17]
order(hf.val)
hf_count <- !is.na(ocm.state[,17])
sum(hf_count)
hf.val.sorted <- hf.val[order(hf.val),]
dim(hf.val)
hf.val.sorted <- hf.val[sort.list(hf.val),]
hf.order <- order(hf.val)
hf.order
?order
head(hf.val)
hf.order <- hf.val[order(hf.val)]
head(hf.val)
head(hf.order)
min(hf.val)
min(as.numeric(hf.val))
min(as.numeric(hf.val), na.rm =TRUE)
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best <- function(state, outcome) {
# Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check that state is valid
if (!(state %in% df[,7])) {stop("invalid state")}
# Check if outcome is valid and determine column number
if (outcome == "heart attack"){
cn <- 11
} else if (outcome == "heart failure"){
cn <- 17
} else if (outcome == "pneumonia"){
cn <- 23
} else {
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death rate
df.state <- df[df[,7] == state,] #subsets df by state
#print(df.state[,c(2,cn)])
df.min <- subset(df.state, df.state[,cn] == min(df.state[,cn])) #subsets df.state by min value for outcome
#print(df.min[,c(2,cn)])
df.sorted <- df.min[order(df.min[,2]),] #sorts df.subset by Hospital.name
#print(df.sorted[,c(2,cn)])
return(df.sorted[1,2])
}
best("TX", "heart failure")
debug(best)
best("TX", "heart failure")
source("best.R")
debug(best)
best("TX", "heart failure")
source("best.R")
debug(best)
best("TX", "heart failure")
undebug(best)
best("TX", "heart failure")
?suppressWarnings
best("MD", "pneumonia")
best("BB", "heart attack")
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df.state <- df[df[,7] == state,] #subsets df by state
df.state <- df[df[,7] == state,] #subsets df by state
state <- "TX"
df.state <- df[df[,7] == state,] #subsets df by state
cn <-17
min_val <- min(as.numeric(df.state[,cn]), na.rm = TRUE)
newdf <-    as.numeric(df.state[,cn]), na.rm = TRUE)
newdf <-    as.numeric(df.state[,cn])
is.na(newdf)
tail(newdf)
tail(df.state)
tail(df.state[,cn])
newnewdf < - na.omit(newdf)
newnewdf <- na.omit(newdf)
source("best.R")
source("best.R")
best("TX", "heart attack")
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- "TX"
cn <- 17
df.state <- df[df[,7] == state,] #subsets df by state
tail(df.state)
tail(df.state[,cn])
head(df.state[,cn])
order(df.state, cn)
df.state order(cn)
?order
df.state[order(dfstate[,cn])]
df.state[order(df.state[,cn])]
df.state[order(df.state[,17])]
df.state[order(df.state[,17]),]
head(df.state[,cn])
df.state <- df.state[order(df.state[,17]),]
head(df.state[,cn])
tail(df.state[,cn])
(df.state[,cn])
source("Galarnyk_best.R")
best("TX", "heart attack")
library(data.table)
install.packages(data.table)
install.packages("data.table"")
install.packages("data.table")
library(data.table)
best("TX", "heart attack")
install.packages("bit64")
library(bit64)
best("TX", "heart attack")
system.time(best())
system.time(best("TX", "heart attack"))
source("best.R")
source("best.R")
system.time(best("TX", "heart attack"))
source("best.R")
system.time(best("TX", "heart attack"))
source("best.R")
system.time(best("TX", "heart attack"))
(best("TX", "heart attack"))
source("best.R")
(best("TX", "heart attack"))
(best("TX", "heart attack"))
system.time(best("TX", "heart attack"))
source("best.R")
(best("TX", "heart attack"))
source("best.R")
(best("TX", "heart attack"))
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("TX", "heart failure")
best("TX", "heart attack")
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- "TX"
cn <-11
df.state <- df[df[,7] == state,]
out_percent <- complete.cases(as.numeric(df.state[,cn]))
out_percent <- as.numeric(df.state[complete.cases(as.numeric(df.state[,cn])),cn])
sum(as.numeric(df.state[,cn])
)
out_percent[order(out_percent)]
df.state[,cn]
cn <-17
df.state[,cn]
source("best.R")
best("TX", "heart attack")
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- "TX"
cn<-11
df.state <- df[df[,7] == state,] #subsets df by state
out_percent <- as.numeric(df.state[complete.cases(as.numeric(df.state[,cn])),cn])
out_percent
min_val <- min(out_percent)
df.min <- subset(df.state, df.state[,cn] == min_val) #subsets df.state by min value for outcome
print(df.min[,c(2,cn)])
df.state[,cn]
min_val <- as.character(min(out_percent))
df.min <- subset(df.state, df.state[,cn] == min_val) #subsets df.state by min value for outcome
min_val <- min(as.numeric(df.state[,cn]))
min_val <- min(as.numeric(df.state[,cn]), na.rm=TRUE)
df.min <- subset(df.state, df.state[,cn] == min_val)
source ("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
source ("best.R")
best("TX", "heart failure")
best("TX", "heart attack")
source ("best.R")
best("TX", "heart failure")
debug(best)
best("TX", "heart failure")
source ("best.R")
debug(best)
best("TX", "heart failure")
best("TX", "heart attack")
source ("best.R")
best("TX", "heart failure")
best("TX", "heart attack")
source ("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
source ("best.R")
debug(best)
best("TX", "heart failure")
source ("best.R")
debug(best)
best("TX", "heart failure")
source ("best.R")
debug(best)
best("TX", "heart failure")
source ("best.R")
best("TX", "heart failure")
debug(best)
best("TX", "heart failure")
source ("best.R")
best("TX", "heart failure")
source ("best.R")
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
source ("best.R")
best("MD", "pneumonia")
source ("best.R")
best("MD", "pneumonia")
debug(best)
best("MD", "pneumonia")
source ("best.R")
debug(best)
best("TX", "heart failure")
source ("best.R")
best("TX", "heart failure")
source ("best.R")
best("TX", "heart failure")
systime(best)
sys.time(best("TX", "heart failure"))
sys.time(best)
sys.time(best)
system(best)
system(best("TX", "heart failure"))
best("TX", "heart failure")
best("TX", "heart attack")
system.time("TX", "heart failure")
system.time(best("TX", "heart failure"))
?num
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
?stop
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
?nrow
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
if (num > nrow(df.state)){stop(NA)}
if (3 > 2){stop(NA)}
?rank
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
x <- c(2,3,4)
print(x[2])
print(x[1])
print(x[0])
debug(rankhospital)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
x<- c(5,4,3)
order(x)
y<-order(x)
?cbind
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
?return
source("rankhospital.R")
source("rankhospital.R")
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
undebug(rankhospital)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
?tapply
source("rankall.R")
?def
source("rankall.R")
source("rankall.R")
debug(rankall)
head(rankall("heart attack", 20), 10)
source("rankall.R")
debug(rankall)
head(rankall("heart attack", 20), 10)
?split
?apply
?lapply
?tapply
source("rankall.R")
debug(rankall)
head(rankall("heart attack", 20), 10)
source("rankall.R")
debug(rankall)
head(rankall("heart attack", 20), 10)
source("rankall.R")
debug(rankall)
head(rankall("heart attack", 20), 10)
