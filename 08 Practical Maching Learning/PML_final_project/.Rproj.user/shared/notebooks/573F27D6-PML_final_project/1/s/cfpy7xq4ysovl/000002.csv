"0","vars <- varImp(fitrf)$importance #determine feature importance"
"0","vars <- vars%>%mutate(names=rownames(vars))%>%arrange(desc(Overall))%>%filter(Overall>10) #select top 20 or so features"
"0","newformula <- paste0(""classe~"", vars$names[1]) "
"0","for (i in 2:length(vars$names)){newformula <- paste(newformula, vars$names[i], sep=""+"")} #define a new formula"
"0","fitrf2time <- system.time(fitrf2 <- train(as.formula(newformula), method=""rf"", data=training, trControl = fitControl)) #refit the rf model"
"0","fitrf2$finalModel #shows OOB error"
"1","
Call:
"
"1"," "
"1","randomForest(x = x, y = y, mtry = param$mtry)"
"1"," "
"1","
"
"1","               Type of random forest: "
"1","classification"
"1","
"
"1","                     Number of trees: "
"1","500"
"1","
"
"1","No. of variables tried at each split: "
"1","2"
"1","

"
"1","        OOB estimate of  error rate: "
"1","0.84"
"1","%
"
"1","Confusion matrix:
"
"1"," "
"1","    A"
"1","    B"
"1","    C"
"1","    D"
"1","    E"
"1"," class.error"
"1","
A"
"1"," 4177"
"1","    6"
"1","    0"
"1","    1"
"1","    1"
"1"," 0.001911589"
"1","
B"
"1","   21"
"1"," 2806"
"1","   19"
"1","    2"
"1","    0"
"1"," 0.014747191"
"1","
C"
"1","    1"
"1","   17"
"1"," 2540"
"1","    9"
"1","    0"
"1"," 0.010518115"
"1","
D"
"1","    0"
"1","    1"
"1","   29"
"1"," 2378"
"1","    4"
"1"," 0.014096186"
"1","
E"
"1","    0"
"1","    0"
"1","    4"
"1","    8"
"1"," 2694"
"1"," 0.004434590"
"1","
"
"0","confusionMatrix(predict(fitrf2, validation), validation$classe)$overall #shows OOSA and CI"
"1","      Accuracy "
"1","         Kappa "
"1"," AccuracyLower "
"1"," AccuracyUpper "
"1","  AccuracyNull "
"1","AccuracyPValue "
"1"," McnemarPValue "
"1","
"
"1","     0.9944943 "
"1","     0.9930355 "
"1","     0.9919995 "
"1","     0.9963687 "
"1","     0.2844617 "
"1","     0.0000000 "
"1","           NaN "
"1","
"
